// <auto-generated />
using System;
using AccountingBook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AccountingBook.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200628130740_LedgerEntities")]
    partial class LedgerEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AccountingBook.Core.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("character varying(5)")
                        .HasMaxLength(5);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyCode = "C001",
                            CompanyName = "hexquote.com",
                            ShortName = "hexquote"
                        });
                });

            modelBuilder.Entity("AccountingBook.Core.Financial.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccountCode")
                        .HasColumnType("integer")
                        .HasMaxLength(5);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("AccountType")
                        .HasColumnType("integer");

                    b.Property<int>("DrOrCrSide")
                        .HasColumnType("integer");

                    b.Property<long?>("ParentAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountCode")
                        .IsUnique();

                    b.HasIndex("ParentAccountId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountCode = 10000,
                            AccountName = "Assets",
                            AccountType = 1,
                            DrOrCrSide = 1
                        },
                        new
                        {
                            Id = 2L,
                            AccountCode = 20000,
                            AccountName = "Liabilities",
                            AccountType = 2,
                            DrOrCrSide = 2
                        },
                        new
                        {
                            Id = 3L,
                            AccountCode = 30000,
                            AccountName = "Equity",
                            AccountType = 3,
                            DrOrCrSide = 2
                        },
                        new
                        {
                            Id = 4L,
                            AccountCode = 40000,
                            AccountName = "Revenue",
                            AccountType = 4,
                            DrOrCrSide = 2
                        },
                        new
                        {
                            Id = 5L,
                            AccountCode = 50000,
                            AccountName = "Expense",
                            AccountType = 5,
                            DrOrCrSide = 1
                        },
                        new
                        {
                            Id = 6L,
                            AccountCode = 10111,
                            AccountName = "Regular Checking Account",
                            AccountType = 1,
                            DrOrCrSide = 1,
                            ParentAccountId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            AccountCode = 10112,
                            AccountName = "Savings Account",
                            AccountType = 1,
                            DrOrCrSide = 1,
                            ParentAccountId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            AccountCode = 10113,
                            AccountName = "Cash in Hand A/C",
                            AccountType = 1,
                            DrOrCrSide = 1,
                            ParentAccountId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            AccountCode = 10120,
                            AccountName = "Accounts Receivable",
                            AccountType = 1,
                            DrOrCrSide = 1,
                            ParentAccountId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            AccountCode = 10140,
                            AccountName = "Prepaid Expenses",
                            AccountType = 1,
                            DrOrCrSide = 1,
                            ParentAccountId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            AccountCode = 10150,
                            AccountName = "Employee Advances",
                            AccountType = 1,
                            DrOrCrSide = 1,
                            ParentAccountId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            AccountCode = 10800,
                            AccountName = "Inventory",
                            AccountType = 1,
                            DrOrCrSide = 1,
                            ParentAccountId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            AccountCode = 10810,
                            AccountName = "Goods Received Clearing Account",
                            AccountType = 1,
                            DrOrCrSide = 1,
                            ParentAccountId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            AccountCode = 20110,
                            AccountName = "Account Payable",
                            AccountType = 2,
                            DrOrCrSide = 2,
                            ParentAccountId = 2L
                        },
                        new
                        {
                            Id = 15L,
                            AccountCode = 20120,
                            AccountName = "Customer Advances",
                            AccountType = 2,
                            DrOrCrSide = 2,
                            ParentAccountId = 2L
                        },
                        new
                        {
                            Id = 16L,
                            AccountCode = 20202,
                            AccountName = "Wages Payable",
                            AccountType = 2,
                            DrOrCrSide = 2,
                            ParentAccountId = 2L
                        },
                        new
                        {
                            Id = 17L,
                            AccountCode = 20300,
                            AccountName = "Sales Tax",
                            AccountType = 2,
                            DrOrCrSide = 2,
                            ParentAccountId = 2L
                        },
                        new
                        {
                            Id = 18L,
                            AccountCode = 30100,
                            AccountName = "Member Capital",
                            AccountType = 3,
                            DrOrCrSide = 2,
                            ParentAccountId = 3L
                        },
                        new
                        {
                            Id = 19L,
                            AccountCode = 30200,
                            AccountName = "Capital Surplus",
                            AccountType = 3,
                            DrOrCrSide = 2,
                            ParentAccountId = 3L
                        },
                        new
                        {
                            Id = 20L,
                            AccountCode = 30300,
                            AccountName = "Retained Surplus",
                            AccountType = 3,
                            DrOrCrSide = 2,
                            ParentAccountId = 3L
                        },
                        new
                        {
                            Id = 21L,
                            AccountCode = 30400,
                            AccountName = "Accumulated Profits",
                            AccountType = 3,
                            DrOrCrSide = 2,
                            ParentAccountId = 3L
                        },
                        new
                        {
                            Id = 22L,
                            AccountCode = 30500,
                            AccountName = "Accumulated Losses",
                            AccountType = 3,
                            DrOrCrSide = 2,
                            ParentAccountId = 3L
                        },
                        new
                        {
                            Id = 23L,
                            AccountCode = 40100,
                            AccountName = "Sales A/C",
                            AccountType = 4,
                            DrOrCrSide = 2,
                            ParentAccountId = 4L
                        },
                        new
                        {
                            Id = 24L,
                            AccountCode = 40200,
                            AccountName = "Sales Discounts",
                            AccountType = 4,
                            DrOrCrSide = 2,
                            ParentAccountId = 4L
                        },
                        new
                        {
                            Id = 25L,
                            AccountCode = 40500,
                            AccountName = "Shipping and Handling",
                            AccountType = 4,
                            DrOrCrSide = 2,
                            ParentAccountId = 4L
                        },
                        new
                        {
                            Id = 26L,
                            AccountCode = 50101,
                            AccountName = "Salary Expenses",
                            AccountType = 5,
                            DrOrCrSide = 1,
                            ParentAccountId = 5L
                        },
                        new
                        {
                            Id = 27L,
                            AccountCode = 50200,
                            AccountName = "Purchase A/C",
                            AccountType = 5,
                            DrOrCrSide = 1,
                            ParentAccountId = 5L
                        },
                        new
                        {
                            Id = 28L,
                            AccountCode = 50300,
                            AccountName = "Cost of Goods Sold",
                            AccountType = 5,
                            DrOrCrSide = 1,
                            ParentAccountId = 5L
                        },
                        new
                        {
                            Id = 29L,
                            AccountCode = 50400,
                            AccountName = "Purchase Discounts",
                            AccountType = 5,
                            DrOrCrSide = 1,
                            ParentAccountId = 5L
                        },
                        new
                        {
                            Id = 30L,
                            AccountCode = 50500,
                            AccountName = "Purchase price Variance",
                            AccountType = 5,
                            DrOrCrSide = 1,
                            ParentAccountId = 5L
                        },
                        new
                        {
                            Id = 31L,
                            AccountCode = 50600,
                            AccountName = "Other Expenses",
                            AccountType = 5,
                            DrOrCrSide = 1,
                            ParentAccountId = 5L
                        },
                        new
                        {
                            Id = 32L,
                            AccountCode = 50700,
                            AccountName = "Purchase Tax",
                            AccountType = 5,
                            DrOrCrSide = 1,
                            ParentAccountId = 5L
                        });
                });

            modelBuilder.Entity("AccountingBook.Core.Financial.GeneralLedgerHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GeneralLedgerHeaders");
                });

            modelBuilder.Entity("AccountingBook.Core.Financial.GeneralLedgerLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("DrCr")
                        .HasColumnType("integer");

                    b.Property<long>("GeneralLedgerHeaderId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("GeneralLedgerHeaderId");

                    b.ToTable("GeneralLedgerLines");
                });

            modelBuilder.Entity("AccountingBook.Core.Financial.JournalEntryHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Memo")
                        .HasColumnType("text");

                    b.Property<bool>("Posted")
                        .HasColumnType("boolean");

                    b.Property<string>("ReferenceNo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JournalEntryHeaders");
                });

            modelBuilder.Entity("AccountingBook.Core.Financial.JournalEntryLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("DrCr")
                        .HasColumnType("integer");

                    b.Property<long>("JournalEntryHeaderId")
                        .HasColumnType("bigint");

                    b.Property<string>("Memo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("JournalEntryHeaderId");

                    b.ToTable("JournalEntryLines");
                });

            modelBuilder.Entity("AccountingBook.Core.Financial.Account", b =>
                {
                    b.HasOne("AccountingBook.Core.Financial.Account", "ParentAccount")
                        .WithMany("ChildAccounts")
                        .HasForeignKey("ParentAccountId");
                });

            modelBuilder.Entity("AccountingBook.Core.Financial.GeneralLedgerLine", b =>
                {
                    b.HasOne("AccountingBook.Core.Financial.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountingBook.Core.Financial.GeneralLedgerHeader", "GeneralLedgerHeader")
                        .WithMany("GeneralLedgerLines")
                        .HasForeignKey("GeneralLedgerHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccountingBook.Core.Financial.JournalEntryLine", b =>
                {
                    b.HasOne("AccountingBook.Core.Financial.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccountingBook.Core.Financial.JournalEntryHeader", "JournalEntryHeader")
                        .WithMany("JournalEntryLines")
                        .HasForeignKey("JournalEntryHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
