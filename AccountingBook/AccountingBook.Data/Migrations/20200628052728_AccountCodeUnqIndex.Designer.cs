// <auto-generated />
using System;
using AccountingBook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AccountingBook.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200628052728_AccountCodeUnqIndex")]
    partial class AccountCodeUnqIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AccountingBook.Core.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("character varying(5)")
                        .HasMaxLength(5);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CompanyCode = "C001",
                            CompanyName = "hexquote.com",
                            ShortName = "hexquote"
                        });
                });

            modelBuilder.Entity("AccountingBook.Core.Financial.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccountCode")
                        .HasColumnType("integer")
                        .HasMaxLength(5);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("AccountType")
                        .HasColumnType("integer");

                    b.Property<int>("DrOrCrSide")
                        .HasColumnType("integer");

                    b.Property<long?>("ParentAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AccountCode")
                        .IsUnique();

                    b.HasIndex("ParentAccountId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccountCode = 10000,
                            AccountName = "Assets",
                            AccountType = 1,
                            DrOrCrSide = 1
                        },
                        new
                        {
                            Id = 2L,
                            AccountCode = 20000,
                            AccountName = "Liabilities",
                            AccountType = 2,
                            DrOrCrSide = 2
                        },
                        new
                        {
                            Id = 3L,
                            AccountCode = 30000,
                            AccountName = "Equity",
                            AccountType = 3,
                            DrOrCrSide = 2
                        },
                        new
                        {
                            Id = 4L,
                            AccountCode = 40000,
                            AccountName = "Revenue",
                            AccountType = 4,
                            DrOrCrSide = 2
                        },
                        new
                        {
                            Id = 5L,
                            AccountCode = 50000,
                            AccountName = "Expense",
                            AccountType = 5,
                            DrOrCrSide = 1
                        });
                });

            modelBuilder.Entity("AccountingBook.Core.Financial.Account", b =>
                {
                    b.HasOne("AccountingBook.Core.Financial.Account", "ParentAccount")
                        .WithMany("ChildAccounts")
                        .HasForeignKey("ParentAccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
